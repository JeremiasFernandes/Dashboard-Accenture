import React, { createContext } from 'react';
import { useState } from 'react';



const dataContext =  createContext({});

export const DataProvider = ({ children }) =>{
    const mock = [{"data":"Jan",
    "demanda":4541,
    "capacidade":4520,
    "atendimento_planejado":2500,
    "atendimento_realizado":2520,
    "desvio":26
    },
    {"data":"Fev",
    "demanda":3252,
    "capacidade":3154,
    "atendimento_planejado":1254,
    "atendimento_realizado":2500,
    "desvio":25
    },
    {"data":"Mar",
    "demanda":3432,
    "capacidade":4230,
    "atendimento_planejado":2523,
    "atendimento_realizado":2342,
    "desvio":24
    },
    {"data":"Abr",
    "demanda":4230,
    "capacidade":2230,
    "atendimento_planejado":2330,
    "atendimento_realizado":2210,
    "desvio":10
    },
    {"data":"Mai",
    "demanda":5000,
    "capacidade":4020,
    "atendimento_planejado":2500,
    "atendimento_realizado":1950,
    "desvio":10
    },
    {"data":"Jun",
    "demanda":4000,
    "capacidade":4010,
    "atendimento_planejado":2500,
    "atendimento_realizado":3000,
    "desvio":10
    },
    {"data":"Jul",
    "demanda":5000,
    "capacidade":4040,
    "atendimento_planejado":2500,
    "atendimento_realizado":3200,
    "desvio":10
    },
    {"data":"Ago",
    "demanda":2000,
    "capacidade":4000,
    "atendimento_planejado":2500,
    "atendimento_realizado":3300,
    "desvio":10
    },
    {"data":"Set",
    "demanda":2000,
    "capacidade":4000,
    "atendimento_planejado":2500,
    "atendimento_realizado":2200,
    "desvio":10
    },
    {"data":"Out",
    "demanda":2000,
    "capacidade":4000,
    "atendimento_planejado":2500,
    "atendimento_realizado":2800,
    "desvio":10
    },
    {"data":"Nov",
    "demanda":2000,
    "capacidade":4000,
    "atendimento_planejado":2500,
    "atendimento_realizado":3500,
    "desvio":10
    },
    {"data":"Dez",
    "demanda":2000,
    "capacidade":4000,
    "atendimento_planejado":2500,
    "atendimento_realizado":1850,
    "desvio":10
    },
]
    const [dados, setDados] = useState(mock);
    const [nome, setNome] = useState("Administrativo");


    function set_Dados(flag){
        if (flag === 1){
            const dado = [{"data":"Jan",
            "demanda":3220,
            "capacidade":5400,
            "atendimento_planejado":2500,
            "atendimento_realizado":2520,
            "desvio":10
            },
            {"data":"Fev",
            "demanda":3440,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1600,
            "desvio":5
            },
            {"data":"Mar",
            "demanda":4000,
            "capacidade":5000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1500,
            "desvio":8
            },
            {"data":"Abr",
            "demanda":4200,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1850,
            "desvio":9
            },
            {"data":"Mai",
            "demanda":4000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1850,
            "desvio":18
            },
            {"data":"Jun",
            "demanda":4200,
            "capacidade":4040,
            "atendimento_planejado":2500,
            "atendimento_realizado":2000,
            "desvio":1
            },
            {"data":"Jul",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":3000,
            "desvio":10
            },
            {"data":"Ago",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2500,
            "desvio":10
            },
            {"data":"Set",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1500,
            "desvio":10
            },
            {"data":"Out",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2800,
            "desvio":10
            },
            {"data":"Nov",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1500,
            "desvio":10
            },
            {"data":"Dez",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1000,
            "desvio":10
            },
        ]
            setDados(dado)
            setNome("Tesouraria")
        }
        if (flag === 2){
            const dado = [{"data":"Jan",
            "demanda":2500,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2520,
            "desvio":10
            },
            {"data":"Fev",
            "demanda":2200,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2550,
            "desvio":10
            },
            {"data":"Mar",
            "demanda":3500,
            "capacidade":4500,
            "atendimento_planejado":2500,
            "atendimento_realizado":2300,
            "desvio":5
            },
            {"data":"Abr",
            "demanda":2005,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2100,
            "desvio":10
            },
            {"data":"Mai",
            "demanda":2251,
            "capacidade":3500,
            "atendimento_planejado":2500,
            "atendimento_realizado":2800,
            "desvio":1
            },
            {"data":"Jun",
            "demanda":2580,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2600,
            "desvio":10
            },
            {"data":"Jul",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2500,
            "desvio":10
            },
            {"data":"Ago",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2400,
            "desvio":10
            },
            {"data":"Set",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":3560,
            "desvio":10
            },
            {"data":"Out",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":3200,
            "desvio":10
            },
            {"data":"Nov",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":3800,
            "desvio":10
            },
            {"data":"Dez",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2550,
            "desvio":10
            },
        ]

            setDados(dado)
            setNome("Administrativo")
        }

        if (flag === 3){
            const dado = [{"data":"Jan",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2520,
            "desvio":10
            },
            {"data":"Fev",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2550,
            "desvio":10
            },
            {"data":"Mar",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2300,
            "desvio":10
            },
            {"data":"Abr",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1500,
            "desvio":10
            },
            {"data":"Mai",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1250,
            "desvio":10
            },
            {"data":"Jun",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2560,
            "desvio":10
            },
            {"data":"Jul",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2410,
            "desvio":10
            },
            {"data":"Ago",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":3000,
            "desvio":10
            },
            {"data":"Set",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1260,
            "desvio":10
            },
            {"data":"Out",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":2800,
            "desvio":10
            },
            {"data":"Nov",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":3500,
            "desvio":10
            },
            {"data":"Dez",
            "demanda":2000,
            "capacidade":4000,
            "atendimento_planejado":2500,
            "atendimento_realizado":1400,
            "desvio":10
            },
        ]
            setDados(dado)
            setNome("Vendas")
        }

        if (flag === 4){
            setDados(mock);
            setNome("Internos")
        }
    
    }

    return (
        <dataContext.Provider value={{dados,setDados,nome,setNome, set_Dados}}>
          {children}
        </dataContext.Provider>
      );

};

export default dataContext;